# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String!
  refreshToken: String!
}

type CategoryModel {
  id: String!
  name: String!
  parent: CategoryModel
  children: [CategoryModel!]
  contents: [ContentModel!]!
}

type SourceModel {
  id: String!
  name: String!
  url: String!
  description: String
  logoUrl: String
  content: [ContentModel!]!
}

type TagModel {
  id: String!
  name: String!
  contenst: [ContentModel!]!
}

type ContentModel {
  title: String!
  description: String!
  type: ContentType!
  body: String
  mediaUrl: String
  duration: Int
  thumbnail: String
  readTime: Int
  user: UserModel!
  source: SourceModel
  category: CategoryModel
  tags: [TagModel!]!
  comments: [CommentModel!]!
}

enum ContentType {
  ARTICLE
  VIDEO
  PODCAST
  NEWS
}

type CommentModel {
  id: String!
  content: ContentModel!
  user: UserModel!
  perent: CommentModel
  replies: [CommentModel!]
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserModel {
  id: String!
  email: String!
  username: String!
  bio: String
  avatarUrl: String
  roles: [Role!]!
  createdAt: DateTime!
  updatedAt: DateTime!
  contents: [ContentModel!]!
  comments: [CommentModel!]!
}

enum Role {
  USER
  EDITOR
  ADMIN
}

type Query {
  users: [UserModel!]!
  user(id: String!): UserModel!
  profile: UserModel!
  content(id: String!): ContentModel!
  categories: [CategoryModel!]!
  category(id: String!): CategoryModel!
}

type Mutation {
  login(data: LoginInput!): AuthResponse!
  signup(data: SignupInput!): AuthResponse!
  logout: Boolean!
  refreshTokens: AuthResponse!
  createUser(data: CreateUserInput!): UserModel!
  updateUser(data: UpdateUserInput!): UserModel!
  deleteUser(id: String!): Boolean!
  updateProfile(data: UpdateUserInput!): UserModel!
  createContent(data: CreateContentInput!): ContentModel!
  updateContent(data: UpdateContentInput!, id: String!): ContentModel!
  removeContent(id: String!): Boolean!
  createCategory(data: CreateCategoryInput!): CategoryModel!
  updateCategory(id: String!, data: UpdateCategoryInput!): CategoryModel!
}

input LoginInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  username: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
  bio: String
  avatarUrl: String
}

input UpdateUserInput {
  email: String
  password: String
  username: String
  bio: String
  avatarUrl: String
  id: String!
}

input CreateContentInput {
  title: String!
  description: String!
  type: ContentType!
  body: String
  mediaUrl: String
  duration: Int
  thumbnail: String
  readTime: Int
  sourceId: String
  tagIds: [String!]
  categoryIds: [String!]
}

input UpdateContentInput {
  title: String
  description: String
  type: ContentType
  body: String
  mediaUrl: String
  duration: Int
  thumbnail: String
  readTime: Int
  sourceId: String
  tagIds: [String!]
  categoryIds: [String!]
}

input CreateCategoryInput {
  name: String!
  parentId: ID
}

input UpdateCategoryInput {
  name: String
  parentId: ID
}